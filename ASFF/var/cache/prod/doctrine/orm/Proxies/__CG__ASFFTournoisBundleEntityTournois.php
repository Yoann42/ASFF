<?php

namespace Proxies\__CG__\ASFF\TournoisBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Tournois extends \ASFF\TournoisBundle\Entity\Tournois implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'id', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'adversaire', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'auteur', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'date', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'dateLimit', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'dateTournois', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'lienTournois', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'lienLigue', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'series', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'TableauxPoules', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'remarque'];
        }

        return ['__isInitialized__', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'id', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'adversaire', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'auteur', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'date', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'dateLimit', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'dateTournois', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'lienTournois', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'lienLigue', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'series', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'TableauxPoules', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\Tournois' . "\0" . 'remarque'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Tournois $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdversaire($adversaire)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdversaire', [$adversaire]);

        return parent::setAdversaire($adversaire);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdversaire()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdversaire', []);

        return parent::getAdversaire();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuteur($auteur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuteur', [$auteur]);

        return parent::setAuteur($auteur);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuteur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuteur', []);

        return parent::getAuteur();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateLimit($dateLimit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateLimit', [$dateLimit]);

        return parent::setDateLimit($dateLimit);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateLimit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateLimit', []);

        return parent::getDateLimit();
    }

    /**
     * {@inheritDoc}
     */
    public function setLienTournois($lienTournois)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLienTournois', [$lienTournois]);

        return parent::setLienTournois($lienTournois);
    }

    /**
     * {@inheritDoc}
     */
    public function getLienTournois()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLienTournois', []);

        return parent::getLienTournois();
    }

    /**
     * {@inheritDoc}
     */
    public function setLienLigue($lienLigue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLienLigue', [$lienLigue]);

        return parent::setLienLigue($lienLigue);
    }

    /**
     * {@inheritDoc}
     */
    public function getLienLigue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLienLigue', []);

        return parent::getLienLigue();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeries($series)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeries', [$series]);

        return parent::setSeries($series);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeries()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeries', []);

        return parent::getSeries();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateTournois($dateTournois)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateTournois', [$dateTournois]);

        return parent::setDateTournois($dateTournois);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateTournois()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateTournois', []);

        return parent::getDateTournois();
    }

    /**
     * {@inheritDoc}
     */
    public function getCsvDateTournois()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCsvDateTournois', []);

        return parent::getCsvDateTournois();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemarque($remarque)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemarque', [$remarque]);

        return parent::setRemarque($remarque);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemarque()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemarque', []);

        return parent::getRemarque();
    }

    /**
     * {@inheritDoc}
     */
    public function setTableauxPoules($tableauxPoules)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTableauxPoules', [$tableauxPoules]);

        return parent::setTableauxPoules($tableauxPoules);
    }

    /**
     * {@inheritDoc}
     */
    public function getTableauxPoules()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTableauxPoules', []);

        return parent::getTableauxPoules();
    }

}
