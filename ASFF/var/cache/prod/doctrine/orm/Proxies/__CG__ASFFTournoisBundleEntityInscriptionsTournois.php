<?php

namespace Proxies\__CG__\ASFF\TournoisBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class InscriptionsTournois extends \ASFF\TournoisBundle\Entity\InscriptionsTournois implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'user', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'tournois', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'date', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'match_simple', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'match_mixte', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'match_double', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'partenaire_double', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'partenaire_mixte', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'partenaire_double_ext', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'club_double_ext', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'partenaire_mixte_ext', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'club_mixte_ext', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'reglement', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'remarque'];
        }

        return ['__isInitialized__', 'id', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'user', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'tournois', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'date', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'match_simple', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'match_mixte', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'match_double', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'partenaire_double', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'partenaire_mixte', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'partenaire_double_ext', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'club_double_ext', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'partenaire_mixte_ext', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'club_mixte_ext', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'reglement', '' . "\0" . 'ASFF\\TournoisBundle\\Entity\\InscriptionsTournois' . "\0" . 'remarque'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (InscriptionsTournois $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getCsvDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCsvDate', []);

        return parent::getCsvDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setReglement($reglement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReglement', [$reglement]);

        return parent::setReglement($reglement);
    }

    /**
     * {@inheritDoc}
     */
    public function getReglement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReglement', []);

        return parent::getReglement();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemarque($remarque)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemarque', [$remarque]);

        return parent::setRemarque($remarque);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemarque()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemarque', []);

        return parent::getRemarque();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\ASFF\UserBundle\Entity\Users $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setTournois(\ASFF\TournoisBundle\Entity\Tournois $tournois)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTournois', [$tournois]);

        return parent::setTournois($tournois);
    }

    /**
     * {@inheritDoc}
     */
    public function getTournois()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTournois', []);

        return parent::getTournois();
    }

    /**
     * {@inheritDoc}
     */
    public function setMatchSimple($matchSimple)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMatchSimple', [$matchSimple]);

        return parent::setMatchSimple($matchSimple);
    }

    /**
     * {@inheritDoc}
     */
    public function getMatchSimple()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMatchSimple', []);

        return parent::getMatchSimple();
    }

    /**
     * {@inheritDoc}
     */
    public function setMatchMixte($matchMixte)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMatchMixte', [$matchMixte]);

        return parent::setMatchMixte($matchMixte);
    }

    /**
     * {@inheritDoc}
     */
    public function getMatchMixte()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMatchMixte', []);

        return parent::getMatchMixte();
    }

    /**
     * {@inheritDoc}
     */
    public function setMatchDouble($matchDouble)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMatchDouble', [$matchDouble]);

        return parent::setMatchDouble($matchDouble);
    }

    /**
     * {@inheritDoc}
     */
    public function getMatchDouble()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMatchDouble', []);

        return parent::getMatchDouble();
    }

    /**
     * {@inheritDoc}
     */
    public function setPartenaireDoubleExt($partenaireDoubleExt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPartenaireDoubleExt', [$partenaireDoubleExt]);

        return parent::setPartenaireDoubleExt($partenaireDoubleExt);
    }

    /**
     * {@inheritDoc}
     */
    public function getPartenaireDoubleExt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartenaireDoubleExt', []);

        return parent::getPartenaireDoubleExt();
    }

    /**
     * {@inheritDoc}
     */
    public function setClubDoubleExt($clubDoubleExt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClubDoubleExt', [$clubDoubleExt]);

        return parent::setClubDoubleExt($clubDoubleExt);
    }

    /**
     * {@inheritDoc}
     */
    public function getClubDoubleExt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClubDoubleExt', []);

        return parent::getClubDoubleExt();
    }

    /**
     * {@inheritDoc}
     */
    public function setPartenaireMixteExt($partenaireMixteExt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPartenaireMixteExt', [$partenaireMixteExt]);

        return parent::setPartenaireMixteExt($partenaireMixteExt);
    }

    /**
     * {@inheritDoc}
     */
    public function getPartenaireMixteExt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartenaireMixteExt', []);

        return parent::getPartenaireMixteExt();
    }

    /**
     * {@inheritDoc}
     */
    public function setClubMixteExt($clubMixteExt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClubMixteExt', [$clubMixteExt]);

        return parent::setClubMixteExt($clubMixteExt);
    }

    /**
     * {@inheritDoc}
     */
    public function getClubMixteExt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClubMixteExt', []);

        return parent::getClubMixteExt();
    }

    /**
     * {@inheritDoc}
     */
    public function setPartenaireDouble($partenaireDouble)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPartenaireDouble', [$partenaireDouble]);

        return parent::setPartenaireDouble($partenaireDouble);
    }

    /**
     * {@inheritDoc}
     */
    public function getPartenaireDouble()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartenaireDouble', []);

        return parent::getPartenaireDouble();
    }

    /**
     * {@inheritDoc}
     */
    public function setPartenaireMixte($partenaireMixte)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPartenaireMixte', [$partenaireMixte]);

        return parent::setPartenaireMixte($partenaireMixte);
    }

    /**
     * {@inheritDoc}
     */
    public function getPartenaireMixte()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartenaireMixte', []);

        return parent::getPartenaireMixte();
    }

}
